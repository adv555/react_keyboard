{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","pressedKey","setPressedKey","useEffect","handleKeyUp","event","key","document","addEventListener","removeEventListener","className","ReactDOM","render","getElementById"],"mappings":"sLAEaA,EAAgB,WAC3B,MAAoCC,mBAAiB,IAArD,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OAZAC,qBAAU,WACR,IAAMC,EAAc,SAACC,GACnBH,EAAcG,EAAMC,MAKtB,OAFAC,SAASC,iBAAiB,QAASJ,GAE5B,WACLG,SAASE,oBAAoB,QAASL,MAEvC,IAGD,qBAAKM,UAAU,MAAf,SAEIT,EAEI,oBAAGS,UAAU,eAAb,sCAEGT,EAFH,OAMA,mBAAGS,UAAU,eAAb,wC,MCvBZC,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.fe6c2981.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nexport const App: React.FC = () => {\n  const [pressedKey, setPressedKey] = useState<string>('');\n\n  useEffect(() => {\n    const handleKeyUp = (event: KeyboardEvent): void => {\n      setPressedKey(event.key);\n    };\n\n    document.addEventListener('keyup', handleKeyUp);\n\n    return () => {\n      document.removeEventListener('keyup', handleKeyUp);\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {\n        pressedKey\n          ? (\n            <p className=\"App__message\">\n              The last pressed key is [\n              {pressedKey}\n              ]\n            </p>\n          )\n          : <p className=\"App__message\">Nothing was pressed yet</p>\n      }\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}